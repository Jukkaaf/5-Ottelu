package ui;

import tablesAndGraphics.PlayerTable;
import objects.Tournament;


/**
 *  JFrame used for editing user and player information.
 *  It supports adding and removing both users and players.
 *  Changing names and points are also available.
 * 
 * @author Jukka
 */
public class EditPlayer extends javax.swing.JFrame {
    
    private Tournament tournament;
    private Tournament tempTournament;

    public EditPlayer(Tournament tournament) {
        this.setResizable(false);
        this.tournament = tournament;
        
        tempTournament = new Tournament("temp");
        tempTournament.copyTournament(this.tournament);
        
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        buttonCancel = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonAddUser = new javax.swing.JButton();
        buttonRemoveUser = new javax.swing.JButton();
        buttonRemovePlayer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Players");

        tableUsers.setModel(new PlayerTable(tempTournament.getUserList()));
        jScrollPane1.setViewportView(tableUsers);

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonAddUser.setText("Add User");
        buttonAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddUserActionPerformed(evt);
            }
        });

        buttonRemoveUser.setText("Remove User");
        buttonRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveUserActionPerformed(evt);
            }
        });

        buttonRemovePlayer.setText("Remove Player");
        buttonRemovePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemovePlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonAddUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRemoveUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRemovePlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonAddUser)
                    .addComponent(buttonRemoveUser)
                    .addComponent(buttonCancel)
                    .addComponent(buttonRemovePlayer))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        tournament.copyTournament(tempTournament);
        dispose();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed
    /**
     * Adds a new user. 
     */
    private void buttonAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddUserActionPerformed
        tempTournament.addUser("new user");
        tableUsers.updateUI();
    }//GEN-LAST:event_buttonAddUserActionPerformed
    /**
     * Removes the selected user.
     */
    private void buttonRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveUserActionPerformed
        int index = tableUsers.getSelectedRow();
        tempTournament.removeUser(index);
        tableUsers.updateUI();
    }//GEN-LAST:event_buttonRemoveUserActionPerformed
    /**
     * Removes the selected player. 
     */
    private void buttonRemovePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemovePlayerActionPerformed
        int row = tableUsers.getSelectedRow();
        int column = tableUsers.getSelectedColumn();
        
        if(column == 0){
            column = 10;
        }else if(column < 3){
            column = 0;
        }else if(column < 5){
            column = 1;
        }else{
            column = 2;
        }
        
        tempTournament.getUserList().get(row).removePlayer(column);
        tableUsers.updateUI();
    }//GEN-LAST:event_buttonRemovePlayerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddUser;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonRemovePlayer;
    private javax.swing.JButton buttonRemoveUser;
    private javax.swing.JButton buttonSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableUsers;
    // End of variables declaration//GEN-END:variables
}
